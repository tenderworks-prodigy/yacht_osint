name: i_do_format

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0                # need full history for push
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip & install formatters
        run: |
          pip install --upgrade pip
          # pin to a version of Ruff that has `--fix` support
          pip install 'ruff>=0.12.5' black

      - name: Apply auto-fixable Ruff rules
        run: |
          # Ruff expects the path (.) before the --fix flag
          ruff check . --fix
          # verify nothing remains to fix
          ruff check .

      - name: Apply Black formatting
        run: |
          black .

      - name: Ensure branch checked out
        # On pull_request events the checkout action will leave us in a detached
        # HEAD state. Determine the target branch of the PR and explicitly
        # switch to it before committing changes. Both ``GITHUB_HEAD_REF`` and
        # the pull_request payload expose the head reference.
        run: |
          set -e
          BRANCH="${{ github.event.pull_request.head.ref }}"
          if [ -z "$BRANCH" ]; then
            BRANCH="${{ github.head_ref }}"
          fi
          if [ -z "$BRANCH" ]; then
            BRANCH="${GITHUB_REF#refs/heads/}"
          fi
          echo "Checking out PR branch $BRANCH"
          git switch "$BRANCH"

      - name: Commit & push formatting changes
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "chore(auto-format): apply Ruff & Black fixes"
            # push back to the PR branch (avoid detached HEAD push)
            BRANCH="${{ github.event.pull_request.head.ref }}"
            if [ -z "$BRANCH" ]; then
              BRANCH="${{ github.head_ref }}"
            fi
            if [ -z "$BRANCH" ]; then
              BRANCH="${GITHUB_REF#refs/heads/}"
            fi
            echo "Pushing changes to $BRANCH"
            git push origin HEAD:"$BRANCH"
          fi
