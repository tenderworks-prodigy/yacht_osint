name: yacht-osint-nightly
on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  build:
    environment: DATA
    runs-on: ubuntu-latest
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}
      GOOGLE_CSE_API_KEY: ${{ secrets.GOOGLE_CSE_API_KEY }}
      GOOGLE_CSE_CX: ${{ secrets.GOOGLE_CSE_CX }}
      DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Check formatting
        run: |
          ruff --fix .
          black .
          git diff --exit-code

      - name: Run unit tests
        run: pytest -q

      - name: Ensure CSE key present
        run: |
          if [ -z "$GOOGLE_CSE_API_KEY" ] || [ -z "$GOOGLE_CSE_CX" ]; then
            echo "Google CSE credentials missing" >&2
            exit 1
          fi
          head <<<"$GOOGLE_CSE_API_KEY" -c 1 >/dev/null
          head <<<"$GOOGLE_CSE_CX" -c 1 >/dev/null

      - name: Run scraping
        run: |
          python -m src.scrape.crawl
          python -m src.scrape.wayback
          python -m src.scrape.parse
          python -m src.extract.run_all

      - name: Run OSINT pipeline
        run: |
          set -o errexit -o nounset -o pipefail
          rm -rf exports/* exports/.* 2>/dev/null || true
          mkdir -p exports
          ls -a exports/
          python -m src.cli
          python -m src.persist.duckdb_io
          python -m src.persist.new_data
          python -m src.persist.exports

      - name: "Debug: show exports directory contents"
        run: |
          set -o pipefail
          echo "üìÇ Project root contents:"
          ls -la
          echo
          echo "üîç Recursive exports folder:"
          ls -R exports/

      - name: Smoke test exports
        run: |
          python - <<'EOF'
          import pandas as pd, sys
          df = pd.read_csv("exports/yachts.csv")
          if df.empty:
              sys.exit("No data exported!")
          expected = {"name", "length_m"}
          if not expected.issubset(df.columns):
              sys.exit("Missing columns")
          EOF

      - name: Generate DQ report
        run: python -m src.reporting.dq_report

      - name: Upload exports as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: yacht-osint-exports
          path: exports/

      - name: Upload CSVs to Drive
        run: python -m src.persist.rclone_push

      - name: Run QA checks
        run: python -m src.qa.expectations

      - name: Check gh version
        run: gh --version

      - name: On failure open issue
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create --title "‚ùå Yacht-OSINT nightly failed" \
                          --body "Automated run failed ‚Äì see Actions logs." \
                          --dry-run
          gh issue create --title "‚ùå Yacht-OSINT nightly failed" \
                          --body "Automated run failed ‚Äì see Actions logs."
