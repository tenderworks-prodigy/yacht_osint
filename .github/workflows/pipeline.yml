name: yacht-osint-nightly
on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  
jobs:
  build:
    environment: DATA
    runs-on: ubuntu-latest
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}
      GOOGLE_CSE_API_KEY: ${{ secrets.GOOGLE_CSE_API_KEY }}
      GOOGLE_CSE_CX: ${{ secrets.GOOGLE_CSE_CX }}
      DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Install Playwright
        run: |
          pip install -r requirements.txt
          playwright install --with-deps chromium

      - name: Install dev tools
        run: |
          pip install 'ruff==0.12.5' black

      - name: Run lint
        run: |
          ruff check --fix .
          black --check .

      - name: Run unit tests
        run: |
          pytest -q --cov=src --cov-report=xml

      - name: Upload coverage
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml

      - name: Ensure CSE key present
        run: |
          if [ -z "$GOOGLE_CSE_API_KEY" ] || [ -z "$GOOGLE_CSE_CX" ]; then
            echo "Google CSE credentials missing" >&2
            exit 1
          fi
          head <<<"$GOOGLE_CSE_API_KEY" -c 1 >/dev/null
          head <<<"$GOOGLE_CSE_CX" -c 1 >/dev/null

      - name: Run scraping
        run: |
          python -m src.scrape.crawl
          python -m src.scrape.wayback
          python -m src.scrape.parse
          python -m src.extract.run_all

      - name: Run OSINT pipeline
        working-directory: ${{ github.workspace }}
        run: |
          set -o errexit -o nounset -o pipefail
          rm -rf exports/* exports/.* 2>/dev/null || true
          mkdir -p exports
          ls -a exports/
          python -m src.cli
          python -m src.persist.duckdb_io
          python -m src.persist.new_data

      - name: Export CSV
        working-directory: ${{ github.workspace }}
        run: |
          python -m src.export.csv
          echo "Exit=$?"
          find . -maxdepth 2 -type f
          find . -name yachts.csv

      - name: Debug workspace
        working-directory: ${{ github.workspace }}
        run: echo "PWD=$(pwd)" && find . -maxdepth 3 -type f

      - name: Smoke test exports
        working-directory: ${{ github.workspace }}
        run: |
          python - <<'EOF'
          import pandas as pd, sys
          df = pd.read_csv("exports/yachts.csv")
          if df.empty:
              sys.exit("No data exported!")
          expected = {"name", "length_m"}
          if not expected.issubset(df.columns):
              sys.exit("Missing columns")
          EOF

      - name: Pytest smoke pipeline
        working-directory: ${{ github.workspace }}
        run: pytest -q tests/smoke_pipeline.py

      - name: Generate DQ report
        run: python -m src.reporting.dq_report

      - name: Upload exports as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: yacht-osint-exports
          path: exports/

      - name: Upload CSVs to Drive
        run: python -m src.persist.rclone_push

      - name: Run QA checks
        run: python -m src.qa.expectations

      - name: Check gh version
        run: gh --version

      - name: On failure open issue
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create \
            --repo "$GITHUB_REPOSITORY" \
            --title "❌ Yacht-OSINT nightly failed" \
            --body "Automated run failed – see Actions logs."
